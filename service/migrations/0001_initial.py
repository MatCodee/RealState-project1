# Generated by Django 3.2.6 on 2023-05-31 12:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import service.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Ciudad')),
            ],
            options={
                'verbose_name': 'Ciudad',
                'verbose_name_plural': 'Ciudades',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regiones',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RealState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=5000)),
                ('date_published', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('price', models.CharField(max_length=20)),
                ('common_expenses', models.IntegerField(blank=True, null=True)),
                ('m2_construction', models.IntegerField()),
                ('m2_terrain', models.IntegerField()),
                ('height', models.FloatField()),
                ('width', models.FloatField()),
                ('n_bath', models.IntegerField()),
                ('n_room', models.IntegerField()),
                ('n_parking', models.IntegerField()),
                ('n_flat', models.IntegerField()),
                ('country', models.CharField(max_length=50)),
                ('town', models.CharField(max_length=50)),
                ('sector', models.CharField(max_length=50)),
                ('is_vent', models.BooleanField(default=False)),
                ('favorite', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Venta', 'Venta'), ('Arriendo', 'Arriendo')], default='No seleccionado', max_length=50)),
                ('img_principal', models.ImageField(blank=True, null=True, upload_to=service.models.upload_location2)),
                ('code', models.IntegerField(unique=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.city')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.region')),
            ],
        ),
        migrations.CreateModel(
            name='galeryService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=service.models.upload_location)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.realstate')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.region'),
        ),
    ]
